{"version":3,"sources":["webpack:///../src/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Layout.js"],"names":["modifiers","preventOverflow","boundariesElement","padding","Texty","state","isHovered","renderTooltip","_ref","ref","style","placement","arrowProps","_this$props","_this","props","children","container","tooltip","tooltipClassName","tooltipStyle","arrowClassName","hideArrow","content","ReactDom","createPortal","react_default","a","createElement","data-texty-tooltip","className","Object","assign","onClick","handleMouseEvent","onDoubleClick","onContextMenu","onMouseDown","onMouseUp","data-texty-arrow","targetNode","ownerDocument","body","setTargetRef","innerRef","e","stopPropagation","handleScroll","setState","handleMouseEnter","_this$props2","showDelay","onMouseEnter","_clearHideTimer","showTimer","setTimeout","handleMouseLeave","_this$props3","hideDelay","onMouseLeave","_clearShowTimer","hideTimer","componentDidUpdate","_this2","this","window","addEventListener","listenTimer","_clearListenTimer","removeEventListener","componentWillUnmount","render","_this$props4","Tag","tagName","rest","_objectWithoutPropertiesLoose","data-texty","target","isTruncated","scrollWidth","offsetWidth","showTooltip","esm","referenceElement","clearTimeout","React","Component","defaultProps","Page","Layout","src","href","color","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","react_github_corner__WEBPACK_IMPORTED_MODULE_2__","react_github_corner__WEBPACK_IMPORTED_MODULE_2___default","Fragment","title","meta","name","size","bannerColor"],"mappings":"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","file":"component---src-pages-index-js-beb8ba27072aa7c06b3f.js","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\nimport PropTypes from 'prop-types'\nimport { Popper } from 'react-popper'\n\nconst modifiers = {\n  preventOverflow: {\n    boundariesElement: 'viewport',\n    padding: 10,\n  },\n}\n\n/**\n * Text component with tooltip support powered by Popper\n */\nclass Texty extends React.Component {\n  state = {\n    isHovered: false,\n  }\n\n  componentDidUpdate() {\n    if (this.state.isHovered) {\n      window.addEventListener('scroll', this.handleScroll, true)\n      // react-virtualized-auto-sizer would trigger scroll events after tooltip shown in some case, we have to skip those scroll events\n      this.listenTimer = setTimeout(() => {\n        window.addEventListener('scroll', this.handleScroll, true)\n        delete this.listenTimer\n      }, 50)\n    } else {\n      this._clearListenTimer()\n      window.removeEventListener('scroll', this.handleScroll, true)\n    }\n  }\n\n  componentWillUnmount() {\n    this._clearListenTimer()\n    window.removeEventListener('scroll', this.handleScroll, true)\n    this._clearShowTimer()\n    this._clearHideTimer()\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      tagName: Tag,\n      children,\n      placement,\n      // omit the following from rest\n      innerRef,\n      showDelay,\n      hideDelay,\n      tooltip,\n      tooltipClassName,\n      tooltipStyle,\n      hideArrow,\n      container,\n      ...rest\n    } = this.props\n    /* eslint-enable no-unused-vars */\n\n    if (!children) {\n      return <Tag {...rest} ref={this.setTargetRef} data-texty={false} />\n    }\n\n    const target = this.targetNode\n    const isTruncated = !!target && target.scrollWidth > target.offsetWidth\n    const showTooltip = this.state.isHovered && isTruncated\n    return (\n      <Tag\n        {...rest}\n        ref={this.setTargetRef}\n        data-texty={showTooltip}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {children}\n        {showTooltip && (\n          <Popper\n            referenceElement={target}\n            placement={placement}\n            modifiers={modifiers}\n          >\n            {this.renderTooltip}\n          </Popper>\n        )}\n      </Tag>\n    )\n  }\n\n  renderTooltip = ({ ref, style, placement, arrowProps }) => {\n    const {\n      children,\n      container,\n      tooltip,\n      tooltipClassName,\n      tooltipStyle,\n      arrowClassName,\n      hideArrow,\n    } = this.props\n\n    const content = tooltip || children\n\n    return ReactDom.createPortal(\n      <div\n        ref={ref}\n        data-texty-tooltip={placement}\n        className={tooltipClassName}\n        style={tooltipStyle ? { ...style, ...tooltipStyle } : style}\n        onClick={this.handleMouseEvent}\n        onDoubleClick={this.handleMouseEvent}\n        onContextMenu={this.handleMouseEvent}\n        onMouseDown={this.handleMouseEvent}\n        onMouseUp={this.handleMouseEvent}\n      >\n        {content}\n        {!hideArrow && (\n          <div\n            ref={arrowProps.ref}\n            data-texty-arrow={placement}\n            className={arrowClassName}\n            style={arrowProps.style}\n          />\n        )}\n      </div>,\n      container || this.targetNode.ownerDocument.body\n    )\n  }\n\n  setTargetRef = ref => {\n    this.props.innerRef && this.props.innerRef(ref)\n    this.targetNode = ref\n  }\n\n  handleMouseEvent = e => {\n    e.stopPropagation()\n  }\n\n  handleScroll = e => {\n    this.setState({ isHovered: false })\n  }\n\n  _clearListenTimer() {\n    if (this.listenTimer) {\n      clearTimeout(this.listenTimer)\n      delete this.listenTimer\n    }\n  }\n\n  _clearShowTimer() {\n    if (this.showTimer) {\n      clearTimeout(this.showTimer)\n      delete this.showTimer\n    }\n  }\n\n  _clearHideTimer() {\n    if (this.hideTimer) {\n      clearTimeout(this.hideTimer)\n      delete this.hideTimer\n    }\n  }\n\n  handleMouseEnter = e => {\n    // eslint-disable-next-line react/prop-types\n    const { showDelay, onMouseEnter } = this.props\n    onMouseEnter && onMouseEnter(e)\n\n    this._clearHideTimer()\n\n    if (!showDelay) {\n      this.setState({ isHovered: true })\n      return\n    }\n\n    this.showTimer = setTimeout(() => {\n      this.setState({ isHovered: true })\n      delete this.showTimer\n    }, showDelay)\n  }\n\n  handleMouseLeave = e => {\n    // eslint-disable-next-line react/prop-types\n    const { hideDelay, onMouseLeave } = this.props\n    onMouseLeave && onMouseLeave(e)\n\n    this._clearShowTimer()\n\n    const { isHovered } = this.state\n    if (!isHovered) return\n\n    if (!hideDelay) {\n      this.setState({ isHovered: false })\n      return\n    }\n\n    this.hideTimer = setTimeout(() => {\n      this.setState({ isHovered: false })\n      delete this.hideTimer\n    }, hideDelay)\n  }\n}\n\nTexty.defaultProps = {\n  tagName: 'div',\n  showDelay: 150,\n  hideDelay: 150,\n  hideArrow: false,\n  placement: 'top',\n}\n\nTexty.propTypes = {\n  /**\n   * Get inner ref of the component\n   */\n  innerRef: PropTypes.func,\n  /**\n   * Tag name for the component\n   */\n  tagName: PropTypes.string,\n  /**\n   * Should be string or inline element\n   */\n  children: PropTypes.node,\n  /**\n   * Tooltip for the truncated text if set, or the children will be used\n   */\n  tooltip: PropTypes.node,\n  /**\n   * Classname for the tooltip\n   */\n  tooltipClassName: PropTypes.string,\n  /**\n   * Custom style of the tooltip\n   */\n  tooltipStyle: PropTypes.object,\n  /**\n   * Delay milliseconds to show when mouse enter\n   */\n  showDelay: PropTypes.number,\n  /**\n   * Delay milliseconds to hide when mouse leave\n   */\n  hideDelay: PropTypes.number,\n  /**\n   * Classname for the arrow\n   */\n  arrowClassName: PropTypes.string,\n  /**\n   * Whether to show the tooltip arrow\n   */\n  hideArrow: PropTypes.bool,\n  /**\n   * The placement of the tooltip\n   */\n  placement: PropTypes.oneOf([\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n  ]),\n  /**\n   * The HTML Element to append the tooltip **In most cases you don't need to set it manually**\n   */\n  container: PropTypes.instanceOf(\n    typeof Element !== 'undefined' ? Element : Object\n  ),\n}\n\nexport default Texty\n","import React from 'react'\nimport Text from 'react-texty'\n\nimport Layout from '../components/Layout'\n\nconst Page = () => (\n  <Layout>\n    <h1>react-texty</h1>\n    <Text>I'm not truncated so there is no tooltip.</Text>\n    <Text>I'm too long to show, so there is tooltip for the full content.</Text>\n    <Text tagName=\"a\" href=\"/\">\n      <b>tagName=\"a\": </b>I'm too long to show, so there is tooltip for the full\n      content.\n    </Text>\n    <Text tooltip=\"foo\">\n      <b>tooltip=\"foo\": </b>I'm too long to show, so there is tooltip for the\n      full content.\n    </Text>\n    <Text tooltipClassName=\"steelblue\">\n      <b>tooltipClassName: </b>I'm too long to show, so there is tooltip for the\n      full content.\n    </Text>\n    <Text tooltipStyle={{ color: 'red' }}>\n      <b>tooltipStyle={`{ color: 'red' }`}: </b>I'm too long to show, so there is\n      tooltip for the full content.\n    </Text>\n    <Text showDelay={1000}>\n      <b>showDelay=1000: </b>I'm too long to show, so there is tooltip for the\n      full content.\n    </Text>\n    <Text hideDelay={1000}>\n      <b>hideDelay=1000: </b>I'm too long to show, so there is tooltip for the\n      full content.\n    </Text>\n    <Text hideArrow>\n      <b>hideArrow: </b>I'm too long to show, so there is tooltip for the full\n      content.\n    </Text>\n    <Text placement=\"bottom\">\n      <b>placement=\"bottom\": </b>I'm too long to show, so there is tooltip for\n      the full content.\n    </Text>\n    <Text placement=\"bottom-start\">\n      <b>placement=\"bottom-start\": </b>I'm too long to show, so there is tooltip\n      for the full content.\n    </Text>\n    <Text placement=\"bottom-end\">\n      <b>placement=\"bottom-end\": </b>I'm too long to show, so there is tooltip\n      for the full content.\n    </Text>\n  </Layout>\n)\n\nexport default Page\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport GithubCorner from 'react-github-corner'\n\nimport '../styles/index.css'\n\nconst Layout = ({ children }) => (\n  <>\n    <Helmet\n      title=\"react-texty\"\n      meta={[\n        {\n          name: 'description',\n          content:\n            \"A straight forward text component with tooltip support when it's truncated\",\n        },\n        {\n          name: 'keywords',\n          content: 'react, component, text, ellipsis, tooltip',\n        },\n        {\n          name: 'author',\n          content: 'Neo Nie<nihgwu@live.com>',\n        },\n      ]}\n    />\n    <GithubCorner\n      href=\"https://github.com/nihgwu/react-texty\"\n      size={100}\n      bannerColor=\"#222\"\n    />\n    <div className=\"content\">{children}</div>\n  </>\n)\n\nexport default Layout\n"],"sourceRoot":""}